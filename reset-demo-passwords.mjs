import { PrismaClient } from '@prisma/client';\nimport bcrypt from 'bcryptjs';\n\nconst prisma = new PrismaClient();\n\nasync function resetDemoPasswords() {\n  console.log('üîÑ Resetting demo user passwords...');\n  \n  try {\n    const demoPassword = 'demo123';\n    const hashedPassword = await bcrypt.hash(demoPassword, 10);\n    \n    // Update demo users with known password\n    await prisma.user.updateMany({\n      where: {\n        uid: {\n          in: ['STH000', 'TRE000', 'HTR000']\n        }\n      },\n      data: {\n        password: hashedPassword\n      }\n    });\n    \n    console.log('‚úÖ Demo passwords updated!');\n    console.log('\\nüìã Demo Login Credentials:');\n    console.log('‚Ä¢ Student: STH000 / demo123');\n    console.log('‚Ä¢ Teacher: TRE000 / demo123');\n    console.log('‚Ä¢ Head Teacher: HTR000 / demo123');\n    \n  } catch (error) {\n    console.error('‚ùå Error updating passwords:', error);\n  } finally {\n    await prisma.$disconnect();\n  }\n}\n\nresetDemoPasswords();