import fetch from 'node-fetch';\n\nconst API_BASE = 'http://localhost:5000';\n\n// Test attendance API endpoints\nasync function testAttendanceAPIs() {\n  console.log('üß™ Testing Attendance API endpoints...');\n  \n  try {\n    // First login as teacher to get token\n    console.log('\\n1. Logging in as teacher...');\n    const loginResponse = await fetch(`${API_BASE}/api/auth/login`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ uid: 'TRE000', password: 'teacher123' })\n    });\n    \n    const loginData = await loginResponse.json();\n    if (!loginResponse.ok) {\n      throw new Error(`Login failed: ${loginData.message}`);\n    }\n    \n    const token = loginData.token;\n    console.log('   ‚úÖ Login successful!');\n    \n    // Get teacher's classes\n    console.log('\\n2. Getting teacher\\'s scheduled classes...');\n    const classesResponse = await fetch(`${API_BASE}/api/scheduling/my-classes`, {\n      headers: { 'Authorization': `Bearer ${token}` }\n    });\n    \n    const classesData = await classesResponse.json();\n    if (!classesResponse.ok) {\n      throw new Error(`Failed to get classes: ${classesData.message}`);\n    }\n    \n    console.log(`   ‚úÖ Found ${classesData.length} scheduled classes`);\n    classesData.forEach(cls => {\n      console.log(`      - ${cls.subject} (${cls.batchType}) at ${cls.startTime}-${cls.endTime}`);\n    });\n    \n    if (classesData.length === 0) {\n      console.log('   ‚ö†Ô∏è  No classes found for today. Check if demo data was created properly.');\n      return;\n    }\n    \n    // Get students for the first class\n    const firstClass = classesData[0];\n    console.log(`\\n3. Getting students for ${firstClass.subject} class...`);\n    const studentsResponse = await fetch(`${API_BASE}/api/attendance/students/${firstClass.id}`, {\n      headers: { 'Authorization': `Bearer ${token}` }\n    });\n    \n    const studentsData = await studentsResponse.json();\n    if (!studentsResponse.ok) {\n      throw new Error(`Failed to get students: ${studentsData.message}`);\n    }\n    \n    console.log(`   ‚úÖ Found ${studentsData.length} students for this class`);\n    studentsData.forEach(student => {\n      console.log(`      - ${student.fullName} (${student.uid})`);\n    });\n    \n    if (studentsData.length === 0) {\n      console.log('   ‚ö†Ô∏è  No students found. This is expected as students might be in different batches.');\n    }\n    \n    // Test marking attendance (only if there are students)\n    if (studentsData.length > 0) {\n      console.log('\\n4. Testing attendance marking...');\n      \n      const attendanceData = studentsData.map(student => ({\n        studentId: student.id,\n        status: 'PRESENT',\n        notes: 'Test attendance marking'\n      }));\n      \n      const markResponse = await fetch(`${API_BASE}/api/attendance/mark`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          classScheduleId: firstClass.id,\n          attendanceData\n        })\n      });\n      \n      const markData = await markResponse.json();\n      if (!markResponse.ok) {\n        throw new Error(`Failed to mark attendance: ${markData.message || JSON.stringify(markData)}`);\n      }\n      \n      console.log('   ‚úÖ Attendance marked successfully!');\n      console.log(`   ‚úÖ Marked attendance for ${markData.attendance?.length || 0} students`);\n    }\n    \n    console.log('\\nüéâ All attendance API tests passed!');\n    \n  } catch (error) {\n    console.error('‚ùå Test failed:', error.message);\n  }\n}\n\ntestAttendanceAPIs();